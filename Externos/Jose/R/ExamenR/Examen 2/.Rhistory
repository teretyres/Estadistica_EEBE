desviacion.estandar = varianza #Calcular la desviacion estandar = varianza
desviacion.estandar
suma.mayor = 51942
probabilidad.suma = pnorm(suma.mayor,mean=muestra*media,sd=sqrt(muestra)*desviacion.estandar)
probabilidad.suma
probabilidad.menos = 2
media.maxima = 789
tamaño.minimo = (qnorm(probabilidad.menos/100)*desviacion.estandar/(media.maxima-media))^2
tamaño.minimo
muestreo = 9
promedio = 807
probabilidad.mayor = 5
cantidad.a.aumentar = (promedio-qnorm(1-probabilidad.mayor/100)*desviacion.estandar/sqrt(muestreo))-media
cantidad.a.aumentar
probabilidad.operador = 0.58
proximos.fallos = 32
fallos.operador = 18
#Probabilidad que los siguientes proximos.fallos, haya fallos.operador causados por un operador
probabilidad = dbinom(fallos.operador,proximos.fallos,probabilidad.operador) #dbinom(lo que espero que pase, cantidad de la muestra, probabilidad que pase cada vez)
probabilidad
# Parámetros de la distribución binomial
n <- 32  # tamaño de la muestra
p <- 0.58  # probabilidad de éxito (casa con al menos dos televisores)
# Cálculo de la probabilidad
prob <- dbinom(18, size = n, prob = p)
# Imprimir el resultado
print(prob)
probabilidad.operador = 0.58
proximos.fallos = 24
fallos.operador = 18
#Probabilidad que los siguientes proximos.fallos, haya fallos.operador causados por un operador
probabilidad = dbinom(fallos.operador,proximos.fallos,probabilidad.operador) #dbinom(lo que espero que pase, cantidad de la muestra, probabilidad que pase cada vez)
probabilidad
#Probabilidad que menos de fallos operador sean causados por un operador
fallos.operador = 11
probabilidad = pbinom(fallos.operador,proximos.fallos,probabilidad.operador) #pbinom(lo que espero que pase, cantidad de la muestra, probabilidad que pase cada vez)
probabilidad
# Parámetros de la distribución binomial
n <- 24  # tamaño de la muestra
p <- 0.58  # probabilidad de éxito (casa con al menos dos televisores)
# Cálculo de la probabilidad
prob <- 1 - pbinom(11, size = n, prob = p)
# Imprimir el resultado
print(prob)
# Parámetros de la distribución binomial
n <- 20  # tamaño de la muestra
p <- 0.42  # probabilidad de éxito (casa con máximo un televisor)
# Cálculo del valor esperado
valor_esperado <- n * p
# Cálculo de la varianza
varianza <- n * p * (1 - p)
# Cálculo del cuarto cuantil
cuarto_cuantil <- qbinom(0.75, size = n, prob = p)
# Imprimir los resultados
print(paste("Valor esperado: ", valor_esperado))
print(paste("Varianza: ", varianza))
print(paste("Cuarto cuantil: ", cuarto_cuantil))
# Parámetros de la distribución binomial
n <- 26  # tamaño de la muestra
p <- 0.58  # probabilidad de éxito (casa con al menos dos televisores)
# Número de simulaciones
num_simulaciones <- 100000
# Simulación de los experimentos
resultados <- rbinom(num_simulaciones, size = n, prob = p)
# Cálculo de la media
media <- mean(resultados)
# Imprimir el resultado
print(media)
# Parámetros de la distribución normal
media <- 498  # media de hojas por paquete
# Usamos la función qnorm para encontrar la desviación estándar de la distribución
# sabiendo que la probabilidad de empaquetar más de 489 hojas es de 0.9986501
desviacion_estandar <- (media - 489) / qnorm(0.9986501)
# Cálculo de la probabilidad de que un paquete sea inaceptable
prob_inaceptable <- pnorm(492, mean = media, sd = desviacion_estandar) +
(1 - pnorm(501, mean = media, sd = desviacion_estandar))
# Imprimir el resultado
print(prob_inaceptable)
# Parámetros de la distribución normal
media <- 498  # media de hojas por paquete
# Usamos la función qnorm para encontrar la desviación estándar de la distribución
# sabiendo que la probabilidad de empaquetar más de 489 hojas es de 0.9986501
desviacion_estandar <- (media - 489) / qnorm(0.9986501)
# Cálculo de la probabilidad de que un paquete contenga un máximo de 501 hojas
prob_max_501 <- pnorm(501, mean = media, sd = desviacion_estandar)
# Imprimir el resultado
print(prob_max_501)
# Parámetros de la distribución normal
media <- 498  # media de hojas por paquete
# Usamos la función qnorm para encontrar la desviación estándar de la distribución
# sabiendo que la probabilidad de empaquetar más de 489 hojas es de 0.9986501
desviacion_estandar <- (media - 489) / qnorm(0.9986501)
# Cálculo de la probabilidad de que un paquete sea inaceptable
prob_inaceptable <- pnorm(492, mean = media, sd = desviacion_estandar) +
(1 - pnorm(501, mean = media, sd = desviacion_estandar))
# Imprimir el resultado
print(prob_inaceptable)
# Parámetros de la distribución normal
media <- 498  # media de hojas por paquete
# Usamos la función qnorm para encontrar la desviación estándar de la distribución
# sabiendo que la probabilidad de empaquetar más de 489 hojas es de 0.9986501
desviacion_estandar <- (media - 489) / qnorm(0.9986501)
# Cálculo de la probabilidad de que un paquete contenga un máximo de 501 hojas
prob_max_501 <- pnorm(501, mean = media, sd = desviacion_estandar)
# Imprimir el resultado
print(prob_max_501)
# Parámetros de la distribución normal
media <- 498  # media de hojas por paquete
# Usamos la función qnorm para encontrar la desviación estándar de la distribución
# sabiendo que la probabilidad de empaquetar más de 489 hojas es de 0.9986501
desviacion_estandar <- (media - 489) / qnorm(0.9986501)
# Crear una secuencia de números para el eje x
x <- seq(media - 4*desviacion_estandar, media + 4*desviacion_estandar, length = 100)
# Crear el gráfico de la función de densidad
curve(dnorm(x, mean = media, sd = desviacion_estandar),
from = media - 4*desviacion_estandar,
to = media + 4*desviacion_estandar,
xlab = "Número de hojas por paquete",
ylab = "Densidad",
main = "Función de densidad del número de hojas por paquete")
# Parámetros de la distribución normal
media <- 498  # media de hojas por paquete
# Usamos la función qnorm para encontrar la desviación estándar de la distribución
# sabiendo que la probabilidad de empaquetar más de 489 hojas es de 0.9986501
desviacion_estandar <- (media - 489) / qnorm(0.9986501)
desviacion_estandar
# Parámetros de la distribución binomial
n <- 32  # tamaño de la muestra
p <- 0.58  # probabilidad de éxito (casa con al menos dos televisores)
# Cálculo de la probabilidad
prob <- dbinom(18, size = n, prob = p)
# Imprimir el resultado
print(prob)
# Parámetros de la distribución binomial
n <- 24  # tamaño de la muestra
p <- 0.58  # probabilidad de éxito (casa con al menos dos televisores)
# Cálculo de la probabilidad
prob <- 1 - pbinom(11, size = n, prob = p)
# Imprimir el resultado
print(prob)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Calcular la desviación estándar de la suma de la muestra
desviacion_estandar_suma <- sqrt(n) * desviacion_estandar
# Imprimir el resultado
print(desviacion_estandar_suma)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Calcular la desviación estándar de la suma de la muestra
desviacion_estandar_suma <- sqrt(n) * desviacion_estandar
# Imprimir el resultado
print(desviacion_estandar_suma)
# Calcular la probabilidad de que la suma de los sueldos no sea menor a 51942 euros
prob_no_menor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_no_menor)
media = 807
media.estimada = 830
muestra = 64
probabilidad = 0.99 #Probabilidad de que la media del sueldo sea menor a media.estimada
varianza = sqrt(muestra)*(media.estimada-media)/(qnorm(probabilidad))
esperanza.varianza = varianza^2 #Calcular el valor esperado
esperanza.varianza
desviacion.estandar = varianza #Calcular la desviacion estandar = varianza
desviacion.estandar
suma.mayor = 51942
probabilidad.suma = pnorm(suma.mayor,mean=muestra*media,sd=sqrt(muestra)*desviacion.estandar)
probabilidad.suma
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Calcular la desviación estándar de la suma de la muestra
desviacion_estandar_suma <- sqrt(n) * desviacion_estandar
# Imprimir el resultado
print(desviacion_estandar_suma)
# Calcular la probabilidad de que la suma de los sueldos no sea menor a 51942 euros
prob_no_menor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_no_menor)
# Calcular la probabilidad de que la suma de los sueldos sea mayor a 51942 euros
prob_mayor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_mayor)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Calcular la desviación estándar de la suma de la muestra
desviacion_estandar_suma <- sqrt(n) * desviacion_estandar
# Imprimir el resultado
print(desviacion_estandar_suma)
# Calcular la probabilidad de que la suma de los sueldos no sea menor a 51942 euros
prob_no_menor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_no_menor)
# Calcular la probabilidad de que la suma de los sueldos sea mayor a 51942 euros
prob_mayor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_mayor)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
media_muestra <- 789  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.02
z <- qnorm(0.02)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media - media_muestra) / z
# Calcular el tamaño mínimo de la muestra
n_minimo <- (z * desviacion_estandar / (media - media_muestra))^2
# Redondear al número entero más grande porque el tamaño de la muestra debe ser un número entero
n_minimo <- ceiling(n_minimo)
# Imprimir el resultado
print(n_minimo)
media = 807
media.estimada = 830
muestra = 64
probabilidad = 0.99 #Probabilidad de que la media del sueldo sea menor a media.estimada
varianza = sqrt(muestra)*(media.estimada-media)/(qnorm(probabilidad))
esperanza.varianza = varianza^2 #Calcular el valor esperado
esperanza.varianza
desviacion.estandar = varianza #Calcular la desviacion estandar = varianza
desviacion.estandar
suma.mayor = 51942
probabilidad.suma = pnorm(suma.mayor,mean=muestra*media,sd=sqrt(muestra)*desviacion.estandar)
probabilidad.suma
probabilidad.menos = 2
media.maxima = 789
tamaño.minimo = (qnorm(probabilidad.menos/100)*desviacion.estandar/(media.maxima-media))^2
tamaño.minimo
muestreo = 9
promedio = 807
probabilidad.mayor = 5
cantidad.a.aumentar = (promedio-qnorm(1-probabilidad.mayor/100)*desviacion.estandar/sqrt(muestreo))-media
cantidad.a.aumentar
media = 807
media.estimada = 830
muestra = 64
probabilidad = 0.99 #Probabilidad de que la media del sueldo sea menor a media.estimada
varianza = sqrt(muestra)*(media.estimada-media)/(qnorm(probabilidad))
esperanza.varianza = varianza^2 #Calcular el valor esperado
esperanza.varianza
desviacion.estandar = varianza #Calcular la desviacion estandar = varianza
desviacion.estandar
suma.mayor = 51942
probabilidad.suma = pnorm(suma.mayor,mean=muestra*media,sd=sqrt(muestra)*desviacion.estandar)
probabilidad.suma
probabilidad.menos = 2
media.maxima = 789
tamaño.minimo = (qnorm(probabilidad.menos/100)*desviacion.estandar/(media-media.maxima))^2
tamaño.minimo
muestreo = 9
promedio = 807
probabilidad.mayor = 5
cantidad.a.aumentar = (promedio-qnorm(1-probabilidad.mayor/100)*desviacion.estandar/sqrt(muestreo))-media
cantidad.a.aumentar
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z1 <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Calcular la desviación estándar de la suma de la muestra
desviacion_estandar_suma <- sqrt(n) * desviacion_estandar
# Imprimir el resultado
print(desviacion_estandar_suma)
# Calcular la probabilidad de que la suma de los sueldos no sea menor a 51942 euros
prob_no_menor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_no_menor)
# Calcular la probabilidad de que la suma de los sueldos sea mayor a 51942 euros
prob_mayor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_mayor)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
media_muestra <- 789  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.02
z <- qnorm(0.02)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media - media_muestra) / z1
# Calcular el tamaño mínimo de la muestra
n_minimo <- (z * desviacion_estandar / (media - media_muestra))^2
# Redondear al número entero más grande porque el tamaño de la muestra debe ser un número entero
n_minimo <- ceiling(n_minimo)
# Imprimir el resultado
print(n_minimo)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z1 <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Calcular la desviación estándar de la suma de la muestra
desviacion_estandar_suma <- sqrt(n) * desviacion_estandar
# Imprimir el resultado
print(desviacion_estandar_suma)
# Calcular la probabilidad de que la suma de los sueldos no sea menor a 51942 euros
prob_no_menor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_no_menor)
# Calcular la probabilidad de que la suma de los sueldos sea mayor a 51942 euros
prob_mayor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_mayor)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
media_muestra <- 789  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.02
z <- qnorm(0.02)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media - media_muestra) / z1
# Calcular el tamaño mínimo de la muestra
n_minimo <- (z1 * desviacion_estandar / (media - media_muestra))^2
# Redondear al número entero más grande porque el tamaño de la muestra debe ser un número entero
n_minimo <- ceiling(n_minimo)
# Imprimir el resultado
print(n_minimo)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z1 <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Calcular la desviación estándar de la suma de la muestra
desviacion_estandar_suma <- sqrt(n) * desviacion_estandar
# Imprimir el resultado
print(desviacion_estandar_suma)
# Calcular la probabilidad de que la suma de los sueldos no sea menor a 51942 euros
prob_no_menor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_no_menor)
# Calcular la probabilidad de que la suma de los sueldos sea mayor a 51942 euros
prob_mayor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_mayor)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
media_muestra <- 789  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.02
z <- qnorm(0.02)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media - media_muestra) / z1
# Calcular el tamaño mínimo de la muestra
n_minimo <- (z1 * desviacion_estandar / (media - media_muestra))^2
# Redondear al número entero más grande porque el tamaño de la muestra debe ser un número entero
n_minimo
# Parámetros de la distribución normal
media <- 807  # media de sueldos
n <- 64  # tamaño de la muestra
media_muestra <- 830  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.99
z1 <- qnorm(0.99)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media_muestra - media) / (z / sqrt(n))
# Calcular el valor esperado de la suma de la muestra
valor_esperado_suma <- n * media
# Imprimir el resultado
print(valor_esperado_suma)
# Calcular la desviación estándar de la suma de la muestra
desviacion_estandar_suma <- sqrt(n) * desviacion_estandar
# Imprimir el resultado
print(desviacion_estandar_suma)
# Calcular la probabilidad de que la suma de los sueldos no sea menor a 51942 euros
prob_no_menor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_no_menor)
# Calcular la probabilidad de que la suma de los sueldos sea mayor a 51942 euros
prob_mayor <- 1 - pnorm(51942, mean = valor_esperado_suma, sd = desviacion_estandar_suma)
# Imprimir el resultado
print(prob_mayor)
# Parámetros de la distribución normal
media <- 807  # media de sueldos
media_muestra <- 789  # media de la muestra
# Encontrar el valor z correspondiente a la probabilidad 0.02
z <- qnorm(0.02)
# Calcular la desviación estándar de la población
desviacion_estandar <- (media - media_muestra) / z1
# Calcular el tamaño mínimo de la muestra
n_minimo <- (z1 * desviacion_estandar / (media - media_muestra))^2
# Redondear al número entero más grande porque el tamaño de la muestra debe ser un número entero
n_minimo
# Encontrar el valor z correspondiente a la probabilidad 0.55 en una distribución normal estándar
z <- qnorm(0.55)
# Calcular el aumento necesario en los sueldos
aumento_sueldos <- z * desviacion_estandar / sqrt(n_minimo)
# Imprimir el resultado
print(aumento_sueldos)
media = 807
media.estimada = 830
muestra = 64
probabilidad = 0.99 #Probabilidad de que la media del sueldo sea menor a media.estimada
varianza = sqrt(muestra)*(media.estimada-media)/(qnorm(probabilidad))
esperanza.varianza = varianza^2 #Calcular el valor esperado
esperanza.varianza
desviacion.estandar = varianza #Calcular la desviacion estandar = varianza
desviacion.estandar
suma.mayor = 51942
probabilidad.suma = pnorm(suma.mayor,mean=muestra*media,sd=sqrt(muestra)*desviacion.estandar)
probabilidad.suma
probabilidad.menos = 2
media.maxima = 789
tamaño.minimo = (qnorm(probabilidad.menos/100)*desviacion.estandar/(media-media.maxima))^2
tamaño.minimo
muestreo = 9
promedio = 807
probabilidad.menor = 5
cantidad.a.aumentar = (promedio-qnorm(1-probabilidad.menor/100)*desviacion.estandar/sqrt(muestreo))-media
cantidad.a.aumentar
media = 807
media.estimada = 830
muestra = 64
probabilidad = 0.99 #Probabilidad de que la media del sueldo sea menor a media.estimada
varianza = sqrt(muestra)*(media.estimada-media)/(qnorm(probabilidad))
esperanza.varianza = varianza^2 #Calcular el valor esperado
esperanza.varianza
desviacion.estandar = varianza #Calcular la desviacion estandar = varianza
desviacion.estandar
suma.mayor = 51942
probabilidad.suma = pnorm(suma.mayor,mean=muestra*media,sd=sqrt(muestra)*desviacion.estandar)
probabilidad.suma
probabilidad.menos = 2
media.maxima = 789
tamaño.minimo = (qnorm(probabilidad.menos/100)*desviacion.estandar/(media-media.maxima))^2
tamaño.minimo
muestreo = 9
promedio = 807
probabilidad.menor = 5
cantidad.a.aumentar = (promedio-qnorm(probabilidad.menor/100)*desviacion.estandar/sqrt(muestreo))-media
cantidad.a.aumentar
dbinom(x = 18,size = 32,prob = 0.58)
pbinom(q=1, size = 24, prob = 0.48, lower.tail= FALSE)
pbinom(q=11, size = 24, prob = 0.48, lower.tail= FALSE)
pbinom(q=11, size = 24, prob = 0.58, lower.tail= FALSE)
#El valor esperat de X:
n<-20
prob_màx_1_televisor<-1-0.58
mean(n*prob_màx_1_televisor)
var<-n*prob_màx_1_televisor*(1-prob_màx_1_televisor);
var
qbinom(0.25, size = 20, prob = (1-0.58))
qbinom(0.25, size = 20, prob = (1-0.58))
experiment<- rbinom(n=100000, size=26, prob=0.58)
mean(experiment)
source("C:/Users/joser/OneDrive/Desktop/Examen 2/Exercici casas con televisores.R")
qbinom(0.75, size = 20, prob = (1-0.58))
qbinom(0.25, size = 20, prob = (1-0.58))
